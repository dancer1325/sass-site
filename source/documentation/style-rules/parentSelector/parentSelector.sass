@use "sass:selector"


.alert
  // The parent selector can be used to add pseudo-classes to the outer
  // selector and nesting does not happen!!!
  &:hover
    font-weight: bold


  // It can also be used to style the outer selector in a certain context, such
  // as a body set to use a right-to-left language.
  // []      it's an attribute selector
  [dir=rtl] &
    margin-left: 0
    margin-right: 10px


  // You can even use it as an argument to pseudo-class selectors.
  // Nesting does not happen neither !!!
  :not(&)
    opacity: 0.8

// &        just allowed at the beginning of compound selectors
// not allowed CSSSelector &
//.bar {
//  foo& {
//    color: baz;
//  }
//}

//                                -- For adding suffixes --
.accordion
  max-width: 600px
  margin: 4rem auto
  width: 90%
  font-family: "Raleway", sans-serif
  background: #f4f4f4

  &__copy
    display: none
    padding: 1rem 1.5rem 2rem 1.5rem
    color: gray
    line-height: 1.6
    font-size: 14px
    font-weight: 500

    &--open
      display: block


//                                -- Withing SassScript --
.main aside:hover,
.sidebar p
  parent-selector: &
// => ((unquote(".main") unquote("aside:hover")),
//     (unquote(".sidebar") unquote("p")))

// + @at-root       -> nest selectors powerfully
@mixin unify-parent($child)
  @at-root #{selector.unify(&, $child)} //TODO: Why do I get an error by the IDE, but fine compiling manually?
    @content



.wrapper .field
  @include unify-parent("input")
  /* ... */

  @include unify-parent("select")
/* ... */




//                                -- Outside style rule === CSS ruleset --
@mixin app-background($color)
  #{if(&, '&.app-background', '.app-background')}
    background-color: $color
    color: rgba(#fff, 0.75)



@include app-background(#036)

.sidebar
  @include app-background(#c6538c)
